(* (⊢ ▷ P) -> (⊢ P) *)
(* (∀n, P (n - 1)) -> (∀n, P n) *)
(* 
 H: (∀n, P (n - 1)) 
 n
 P n 
*)
(* (▷ P ⊢ P) *)

(* 
  (⊢ |==> P) -> (⊢ P )
  (∀res, ∀f, ∃res', res = f + res' -> P (res' * f)) -> (∀ res,  P res)
  
  (|==> P ⊢ P)

*)

(* |==> ▷ wp_delay prog (λ x: A, ⌜ φ x ⌝) ⊢ |==> ▷ Nat.iter n' (λ P, |==> ▷ P) ⌜ φ x⌝) ->
wp_delay prog (λ x: A, ⌜ φ x ⌝) ⊢ Nat.iter n' (λ P, |==> ▷ P) ⌜ φ x⌝) *)

(*

This was about if seperate entailment entails joined entailment.
sep: (⊢ P) -> (⊢ Q)
   (∀n, P n) -> (∀n, Q n)

   (∀n, P n -> Q n)
joined:   P ⊢ Q

Invalid
sep -> joined
  H:((∀n, P n) -> (∀n, Q n))
  n
  H2: P n

  Goal: Q n
Valid
joined -> sep: (∀n, P n -> Q n)  -> (∀n, P n) -> (∀n, Q n)
  H:   (n, P n -> Q n)
  H2:  (n, P n)
  n
  Q n

(P ⊢ Q) -> ((True ⊢ P) -> (True ⊢ Q))
H: (P ⊢ Q) 
H2: (True ⊢ P)
(True ⊢ Q)
entail_trans H2 H
True ⊢ Q
*)